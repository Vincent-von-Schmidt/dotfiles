[bar]
fill = 
empty = 
indicator = 

[global/wm]
margin-bottom = 0
margin-top = 0
include-file = ~/.config/polybar/colors.ini

[bar/main]
monitor-strict = false
override-redirect = false
bottom = true
fixed-center = true
width = 100%
height = 34
offset-x = 5%
offset-y = 2%
background = ${color.background}
foreground = ${color.foreground}
radius-top = 0.0
radius-bottom = 0.0
line-size = 2
line-color = ${color.primary}
border-size = 3
border-color = ${color.background}
padding = 0
module-margin-left = 1
module-margin-right = 1
; font-0 = "Terminus:size=10;3"
font-1 = "waffle:size=10;3"

font-0 = "JetBrainsNerdFont-Regulat.ttf:size=10;3"

modules-left = launcher workspaces
modules-center = title
modules-right = cpu_bar memory_bar date sysmenu
separator =
dim-value = 1.0

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
locale = 

tray-position = none
tray-detached = false
tray-maxsize = 16
tray-background = ${color.background}
tray-offset-x = 0
tray-offset-y = 0
tray-padding = 0
tray-scale = 1.0
enable-ipc = true

; Fallback click handlers that will be called if
; there's no matching module handler found.
click-left = 
click-middle = 
click-right =
scroll-up =
scroll-down =
double-click-left =
double-click-middle =
double-click-right =

cursor-click =  pointer
cursor-scroll = 

[settings]
throttle-output = 5
throttle-output-for = 10
screenchange-reload = false
compositing-background = source
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over
pseudo-transparency = false

[module/title]
type = internal/xwindow

; Available tags:
;   <label> (default)
format = <label>
# format-prefix = 

; Available tokens:
;   %title%
; Default: %title%
label = " %title%"
; label-maxlen = 30

; Used instead of label when there is no window title
;;label-empty = Arch Linux

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/workspaces]
type = internal/xworkspaces

; Only show workspaces defined on the same output as the bar
;
; Useful if you want to show monitor specific workspaces
; on different bars
;
; Default: false
pin-workspaces = true

; Create click handler used to focus desktop
; Default: true
enable-click = true

; Create scroll handlers used to cycle desktops
; Default: true
enable-scroll = true

; icon-[0-9]+ = <desktop-name>;<icon>
; NOTE: The desktop name needs to match the name configured by the WM
; You can get a list of the defined desktops using:
; $ xprop -root _NET_DESKTOP_NAMES
icon-0 = 1;
icon-1 = 2;
icon-2 = 3;
icon-3 = 4;
icon-4 = 5;
icon-default = 

; Available tags:
;   <label-monitor>
;   <label-state> - gets replaced with <label-(active|urgent|occupied|empty)>
; Default: <label-state>
format = <label-state>
format-padding = 0

; Available tokens:
;   %name%
; Default: %name%
label-monitor = %name%

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
; label-active = %icon%
label-active = %name%
label-active-foreground = ${color.primary}
label-active-underline = ${color.primary}

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
; label-occupied = %icon%
label-occupied = %name%
label-occupied-foreground = ${color.alternate}

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
; label-urgent = %icon%
label-urgent = %name%
label-urgent-foreground = ${color.secondary}

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
; label-empty = %icon%
label-empty = %%

label-active-padding = 2
label-urgent-padding = 2
label-occupied-padding = 2
label-empty-padding = 2

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/cpu_bar]
type = internal/cpu

; Seconds to sleep between updates
; Default: 1
interval = 0.5

; Available tags:
;   <label> (default)
;   <bar-load>
;   <ramp-load>
;   <ramp-coreload>
;;format = <label> <ramp-coreload>
format = <bar-load> <label>
format-prefix = " "

; Available tokens:
;   %percentage% (default) - total cpu load averaged over all cores
;   %percentage-sum% - Cumulative load on all cores
;   %percentage-cores% - load percentage for each core
;   %percentage-core[1-9]% - load percentage for specific core
label = "%percentage%%"

; Only applies if <bar-load> is used
bar-load-width = 10
bar-load-gradient = false

bar-load-indicator = ${bar.indicator}
bar-load-indicator-foreground = ${color.foreground}

bar-load-fill = ${bar.fill}
bar-load-foreground-0 = ${color.foreground}
bar-load-foreground-1 = ${color.foreground}
bar-load-foreground-2 = ${color.foreground}

bar-load-empty = ${bar.empty}
bar-load-empty-foreground = ${color.foreground-alt}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/memory_bar]
type = internal/memory

; Seconds to sleep between updates
; Default: 1
interval = 2

; Available tags:
;   <label> (default)
;   <bar-used>
;   <bar-free>
;   <ramp-used>
;   <ramp-free>
;   <bar-swap-used>
;   <bar-swap-free>
;   <ramp-swap-used>
;   <ramp-swap-free>
format = <bar-used> <label>
format-prefix = " "

; Available tokens:
;   %percentage_used% (default)
;   %percentage_free%
;   %gb_used%
;   %gb_free%
;   %gb_total%
;   %mb_used%
;   %mb_free%
;   %mb_total%
;   %percentage_swap_used%
;   %percentage_swap_free%
;   %mb_swap_total%
;   %mb_swap_free%
;   %mb_swap_used%
;   %gb_swap_total%
;   %gb_swap_free%
;   %gb_swap_used%

label = "%mb_used%"

; Only applies if <bar-used> is used
bar-used-width = 10
bar-used-gradient = false

bar-used-indicator = ${bar.indicator}
bar-used-indicator-foreground = ${color.foreground}

bar-used-fill = ${bar.fill}
bar-used-foreground-0 = ${color.foreground}
bar-used-foreground-1 = ${color.foreground}
bar-used-foreground-2 = ${color.foreground}

bar-used-empty = ${bar.empty}
bar-used-empty-foreground = ${color.foreground-alt}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/date]
type = internal/date

; Seconds to sleep between updates
interval = 1.0

; See "http://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
;;date = %Y-%m-%d%

; Optional time format
; time = " %I:%M %p"
time = " %H:%M"

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
;;date-alt = %A, %d %B %Y
time-alt = " %a, %d %b %Y"

; Available tags:
;   <label> (default)
format = <label>

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = %time%

[module/launcher]
type = custom/text
content = 

; "content" has the same properties as "format-NAME"
content-background = ${color.primary}
content-foreground = ${color.module-fg}
content-padding = 2

; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c $COMMAND"
click-left = ~/.config/polybar/launcher.sh &
;;click-middle = ~/.config/polybar/material/scripts/launcher-full
click-right = ~/.config/polybar/color-switch.sh &

; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c $COMMAND"
;;scroll-up = ~/.config/polybar/material/scripts/launcher.sh &
;;scroll-down = ~/.config/polybar/material/scripts/color-switch.sh &

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/sysmenu]
type = custom/text
content = 

content-background = ${color.primary}
content-foreground = ${color.module-fg}
content-padding = 2

click-left = ~/.config/polybar/powermenu.sh &
